{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/calendar-two/calendar-two.component.ts","webpack:///src/app/calendar-two/calendar-two.component.html","webpack:///src/app/front-page/front-page.component.ts","webpack:///src/app/front-page/front-page.component.html","webpack:///src/app/login-dialog/login-dialog.component.ts","webpack:///src/app/login-dialog/login-dialog.component.html","webpack:///src/app/login-form/login-form.component.ts","webpack:///src/app/login-form/login-form.component.html","webpack:///src/app/login.service.ts","webpack:///src/app/login.ts","webpack:///src/app/news-api.service.ts","webpack:///src/app/news-feed/news-feed.component.ts","webpack:///src/app/news-feed/news-feed.component.html","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/regels/regels.component.ts","webpack:///src/app/regels/regels.component.html","webpack:///src/app/register-dialog/register-dialog.component.ts","webpack:///src/app/register-dialog/register-dialog.component.html","webpack:///src/app/register-form/register-form.component.ts","webpack:///src/app/register-form/register-form.component.html","webpack:///src/app/registration.service.ts","webpack:///src/app/registration.ts","webpack:///src/app/services/product.service.ts","webpack:///src/app/shop-components/add-product/add-product.component.ts","webpack:///src/app/shop-components/add-product/add-product.component.html","webpack:///src/app/shop-components/product-details/product-details.component.ts","webpack:///src/app/shop-components/product-details/product-details.component.html","webpack:///src/app/shop-components/product-list/product-list.component.ts","webpack:///src/app/shop-components/product-list/product-list.component.html","webpack:///src/app/shop-components/shopping-cart/shopping-cart.component.ts","webpack:///src/app/shop-components/shopping-cart/shopping-cart.component.html","webpack:///src/app/shop/shop.component.ts","webpack:///src/app/shop/shop.component.html","webpack:///src/app/via-service/via-service.component.ts","webpack:///src/app/via-service/via-service.component.html","webpack:///src/app/via-service/via.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","pathMatch","AppRoutingModule","forRoot","declarations","imports","AppComponent","matDialog","viaService","title","firstName","dialogConfig","data","name","open","sessionStorage","clear","getItem","getMessage","subscribe","msg","text","selector","templateUrl","styleUrls","AppModule","providers","bootstrap","CalendarTwoComponent","calendarPlugins","calendarEvents","start","Date","args","console","log","cell","el","ondblclick","ev","addEvent","date","prompt","concat","dayRender","FrontPageComponent","LoginDialogComponent","dialogRef","close","LoginFormComponent","loginService","login","verify","length","setItem","userId","toString","sendMessage","dialog","LoginService","http","post","providedIn","Login","NewsApiService","api_key","get","source","NewsFeedComponent","newsapi","initArticles","mArticles","initSources","mSources","getArticlesByID","PageNotFoundComponent","RegelsComponent","RegisterDialogComponent","RegisterFormComponent","registrationService","registration","save","RegistrationService","Registration","baseUrl","ProductService","put","AddProductComponent","productService","product","description","price","items","submitted","create","response","error","ProductDetailsComponent","route","router","currentProduct","message","getProduct","snapshot","paramMap","status","update","navigate","ProductListComponent","currentIndex","retrieveProducts","getAll","products","index","deleteAll","findByTitle","searchTitle","removeAllProducts","ShoppingCartComponent","ShopComponent","ViaServiceComponent","ViaService","subject","next","asObservable","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//components\nimport { NewsFeedComponent } from './news-feed/news-feed.component';\nimport { FrontPageComponent } from './front-page/front-page.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { RegelsComponent } from './regels/regels.component';\nimport { CalendarTwoComponent } from './calendar-two/calendar-two.component';\nimport { ShopComponent } from './shop/shop.component';\nimport { ProductListComponent } from './shop-components/product-list/product-list.component';\nimport { ProductDetailsComponent } from './shop-components/product-details/product-details.component';\nimport { AddProductComponent } from './shop-components/add-product/add-product.component';\nimport { ShoppingCartComponent } from './shop-components/shopping-cart/shopping-cart.component';\n\n//end components\n\nconst routes: Routes = [\n  {path: 'home', component: FrontPageComponent},\n  {path: 'nieuws', component: NewsFeedComponent},\n  {path: 'regels', component: RegelsComponent},\n  {path: 'kalender', component: CalendarTwoComponent},\n  {path: 'winkel', component: ShopComponent, \n    children: [\n      { path: '', redirectTo: 'products', pathMatch: 'full' },\n      { path: 'products', component: ProductListComponent },\n      { path: 'products/:id', component: ProductDetailsComponent },\n      { path: 'add', component: AddProductComponent },\n      { path: 'cart', component: ShoppingCartComponent }\n    ]\n  },\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: '**', component: FrontPageComponent},\n  {path: '**', component: PageNotFoundComponent}\n];\n\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { RegisterDialogComponent } from './register-dialog/register-dialog.component';\nimport { LoginDialogComponent } from './login-dialog/login-dialog.component';\nimport { ViaService } from './via-service/via.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'corona-app';\n\n  firstName: string = '';\n \n\n  constructor(private matDialog: MatDialog, public viaService : ViaService) {}\n\n  openRegisterDialog() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {name: \"registreer\"};\n    this.matDialog.open(RegisterDialogComponent, dialogConfig);    \n  }\n\n  openLoginDialog() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {name: \"login\"};\n    this.matDialog.open(LoginDialogComponent, dialogConfig);\n  }\n\n  logout(){\n    sessionStorage.clear();\n    this.firstName = '';\n  }\n\n  refreshLoginStatus() {\n    this.firstName = sessionStorage.getItem('firstName');\n  }\n\n  ngOnInit() {\n    this.viaService.getMessage().subscribe(\n      msg => this.firstName = msg.text        \n      \n    );\n  }\n\n\n}\n","<div class=\"totalPage\">\r\n    <mat-toolbar class=\"toolbar\" color=\"primary\">\r\n        <span><img class=\"toolbarimg\" src=\"assets/images/CoronaFrontPage.png\"></span>\r\n        <span class=\"app_title\">Corona App</span>\r\n        <span class=\"toolbar_fill_remaining_space\"></span>\r\n\r\n        <div>\r\n            <div *ngIf=\"firstName == ''\">\r\n                <button class=\"tbbuttons\" mat-raised-button (click)=\"openRegisterDialog()\">Registreer</button>\r\n                <button class=\"tbbuttons\" mat-raised-button (click)=\"openLoginDialog()\">Login</button>\r\n            </div>\r\n            \r\n            <div *ngIf=\"firstName != ''\">\r\n                Welkom {{firstName}}   \r\n                <button class=\"tbbuttons\" mat-raised-button (click)=\"logout()\">Logout</button>\r\n            </div>\r\n        </div>\r\n\r\n    </mat-toolbar>\r\n\r\n    <mat-sidenav-container class=\"sidenav-container\">\r\n        <mat-sidenav class=\"sidenav\" position=\"start\" mode=\"side\" opened>\r\n            <mat-list>\r\n                <mat-list-item><mat-icon>home</mat-icon><span class=\"navspacer\"></span><a mat-raised-button class=\"navbut\" routerLink=\"/home\" routerLinkActive=\"active\">Home</a></mat-list-item>\r\n                <mat-list-item><mat-icon>menu_book</mat-icon><span class=\"navspacer\"></span><a mat-raised-button class=\"navbut\" color=\"primary\" routerLink=\"/nieuws\" routerLinkActive=\"active\">Nieuws</a></mat-list-item>\r\n                <mat-list-item><mat-icon>info</mat-icon><span class=\"navspacer\"></span><button mat-raised-button class=\"navbut\" color=\"primary\" routerLink=\"/regels\" routerLinkActive=\"active\">Regels & Adviezen</button></mat-list-item>\r\n                <mat-list-item><mat-icon>calendar_today</mat-icon><span class=\"navspacer\"></span><button mat-raised-button class=\"navbut\" color=\"primary\" routerLink=\"/kalender\" routerLinkActive=\"active\">Kalender</button></mat-list-item>\r\n                <mat-list-item><mat-icon>check_circle_outline</mat-icon><span class=\"navspacer\"></span><button mat-raised-button class=\"navbut\" color=\"primary\">Symptomen Check</button></mat-list-item>\r\n                <mat-list-item><mat-icon>shopping_cart</mat-icon><span class=\"navspacer\"></span><button mat-raised-button class=\"navbut\" color=\"primary\" routerLink=\"/winkel\" routerLinkActive=\"active\">Winkel</button></mat-list-item>\r\n            </mat-list>\r\n        </mat-sidenav>\r\n        <mat-sidenav-content>\r\n            <router-outlet></router-outlet>\r\n        </mat-sidenav-content>\r\n\r\n    </mat-sidenav-container>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n//Components (pages)\r\nimport { NewsFeedComponent } from './news-feed/news-feed.component';\r\nimport { FrontPageComponent } from './front-page/front-page.component';\r\n\r\n//Components (dialogs)\r\nimport { RegisterFormComponent } from './register-form/register-form.component';\r\nimport { LoginFormComponent } from './login-form/login-form.component';\r\nimport { RegisterDialogComponent } from './register-dialog/register-dialog.component';\r\nimport { LoginDialogComponent } from './login-dialog/login-dialog.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { RegelsComponent } from './regels/regels.component';\r\nimport { CalendarTwoComponent } from './calendar-two/calendar-two.component';\r\n\r\n//Components (shop stuff)\r\nimport { AddProductComponent } from './shop-components/add-product/add-product.component';\r\nimport { ProductDetailsComponent } from './shop-components/product-details/product-details.component';\r\nimport { ProductListComponent } from './shop-components/product-list/product-list.component';\r\nimport { ShoppingCartComponent } from './shop-components/shopping-cart/shopping-cart.component';\r\nimport { ShopComponent } from './shop/shop.component';\r\n\r\n//Services\r\nimport { ViaServiceComponent } from './via-service/via-service.component';\r\n\r\n//Modules\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FullCalendarModule } from '@fullcalendar/angular';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\n\r\n//Materials components imports\r\n\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatMenuModule} from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FrontPageComponent,\r\n    NewsFeedComponent,\r\n    RegisterDialogComponent,\r\n    RegisterFormComponent,\r\n    LoginDialogComponent,\r\n    LoginFormComponent,\r\n    ViaServiceComponent,\r\n    PageNotFoundComponent,\r\n    RegelsComponent,\r\n    CalendarTwoComponent,\r\n    AddProductComponent,\r\n    ProductDetailsComponent,\r\n    ProductListComponent,\r\n    ShoppingCartComponent,\r\n    ShopComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    FullCalendarModule,\r\n    CdkTableModule,\r\n    //Material imports\r\n    MatSliderModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatGridListModule\r\n    //End of meterial imports\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport listWeekPlugin from '@fullcalendar/list';\r\nimport listDayPlugin from '@fullcalendar/list';\r\nimport { EventInput } from '@fullcalendar/core';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\n@Component({\r\n  selector: 'app-calendar-two',\r\n  templateUrl: './calendar-two.component.html',\r\n  styleUrls: ['./calendar-two.component.css']\r\n})\r\nexport class CalendarTwoComponent implements OnInit {\r\n\r\n  calendarPlugins = [dayGridPlugin, listWeekPlugin, listDayPlugin, interactionPlugin];\r\n  defaultView: 'dayGridMonth';\r\n  calendarEvents: EventInput[] = [\r\n    { title : 'weekend', start: new Date ( 'May 1, 2020, 16:30:00')  } \r\n  ]\r\n\r\n  constructor() { }\r\n  dayRender(args) {\r\n    //console.log(args) \r\n    console.log(\"Double click\"); //Console output \r\n    var cell:HTMLElement = args.el; \r\n    cell.ondblclick = (ev: MouseEvent) => {\r\n      this.addEvent(args.date);\r\n\r\n    }\r\n  }\r\n\r\n\r\n  addEvent(date) {\r\n    console.log(\"I am doing something\"); //Console output \r\n    console.log(this.calendarEvents)\r\n    var title = prompt('Enter event title');\r\n    if (title == '')return; \r\n    this.calendarEvents = this.calendarEvents.concat({\r\n      title:title, \r\n      start:date \r\n    })\r\n    this.dayRender('rerenderEvents');\r\n  \r\n\r\n  }\r\n\r\n \r\n\r\n  ngOnInit(): void {\r\n  }\r\n}","<div class=\"CalDiv\">\r\n  <p>\r\n    <full-calendar \r\n        [plugins]=\"calendarPlugins\"\r\n        defaultView=\"dayGridMonth\" \r\n        (dayRender) = \"dayRender($event)\"\r\n        [weekends] = \"true\"\r\n        [events]=\"[\r\n        { title: 'Presentatie eindopdracht', \r\n          date: '2020-05-13',\r\n          allDay: true,\r\n          editable: true,\r\n          color: 'orange',\r\n          eventStartEditable: true\r\n        },\r\n        { title: 'Persconferentie Maatregelen', \r\n          date: '2020-05-06',\r\n          allDay: true,\r\n          editable: true,\r\n          color: 'purple',\r\n          eventStartEditable: true\r\n        },\r\n        { title: 'Basisscholen gedeeltelijk open', \r\n          date: '2020-05-11',\r\n          allDay: true,\r\n          editable: true,\r\n          color: 'purple',\r\n          eventStartEditable: true\r\n        },\r\n        { title: 'Kinderen tot 12 jaar weer sporten', \r\n          date: '2020-04-29',\r\n          allDay: true,\r\n          editable: true,\r\n          color: 'purple',\r\n          eventStartEditable: true\r\n        },\r\n        { title: 'Eind verbod evenementen', \r\n          date: '2020-09-01',\r\n          allDay: true,\r\n          editable: true,\r\n          color: 'purple',\r\n          eventStartEditable: true\r\n        }\r\n      ]\"\r\n    ></full-calendar>\r\n  </p>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-front-page',\n  templateUrl: './front-page.component.html',\n  styleUrls: ['./front-page.component.css']\n})\nexport class FrontPageComponent implements OnInit {\n  \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"frontpage\">\r\n    <div class=\"contentcontainer\">\r\n        <img src=\"assets/images/CoronaFrontPage.png\">\r\n   \r\n    \r\n        <h1>Welkom in de corona app!</h1>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-login-dialog',\n  templateUrl: './login-dialog.component.html',\n  styleUrls: ['./login-dialog.component.css']\n})\nexport class LoginDialogComponent implements OnInit {\n\n  constructor(public dialogRef : MatDialogRef<LoginDialogComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<app-login-form [dialog]=this></app-login-form>","import { Component, OnInit, Input } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { LoginDialogComponent } from '../login-dialog/login-dialog.component';\nimport { Login } from '../login';\nimport { ViaService } from '../via-service/via.service';\n\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css'],\n  providers: [LoginService]\n})\nexport class LoginFormComponent implements OnInit {\n\n  @Input()\n  dialog: LoginDialogComponent\n\n  login = new Login()\n\n  constructor(public loginService: LoginService, public viaService: ViaService) { }\n\n  \n\n\n  verify() {\n    this.loginService.verify(this.login).subscribe(\n      data => {if (data.length == 0){\n        //not logged in\n        console.log(\"Inlog mislukt\")\n      } else {\n        //logged in\n        sessionStorage.setItem('userId', (data[0].userId).toString())\n        sessionStorage.setItem('firstName', data[0].firstName)\n\n        this.viaService.sendMessage(data[0].firstName)\n\n        //root.refreshLoginStatus()\n        \n        console.log(\"Inlog gelukt\")\n        this.dialog.close()\n      }     \n      });\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<h2 mat-dialog-title>Login</h2>\n\n<mat-dialog-content>\n\n    <mat-form-field appearance=\"legacy\">\n        <mat-label>Gebruikersnaam</mat-label>\n        <input matInput required type=\"text\" id=\"username\" [(ngModel)]=\"login.username\" name=\"username\">\n    </mat-form-field>\n      <br>\n        <mat-form-field appearance=\"legacy\">\n        <mat-label>Wachtwoord</mat-label>\n        <input matInput required type=\"password\" id=\"password\" [(ngModel)]=\"login.password\" name=\"password\">\n    </mat-form-field>\n    \n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button class=\"mat-raised-button\" (click)=\"verify()\">Login</button>\n</mat-dialog-actions>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Login } from './login';\nimport { Registration } from './registration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient) { }\n\n  verify(login: Login){\n    return this.http.post<Registration[]>('/login', login)\n\n  }\n}\n","export class Login {\n\n    username: string;\n    password: string;\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class NewsApiService {\n\n  api_key = '67d68b5aa0cc49779f1be1f5ce8829e9';\n\n  constructor(private http:HttpClient) { }\n\n\n\n  initSources(){\n    return this.http.get('https://newsapi.org/v2/sources?country=nl&apiKey='+this.api_key);\n }\n  initArticles(){\n    return this.http.get('https://newsapi.org/v2/top-headlines?q=corona&country=nl&apiKey='+this.api_key);\n }\n  getArticlesByID(source: String){\n    return this.http.get('https://newsapi.org/v2/top-headlines?sources='+source+'&apiKey='+this.api_key);\n }\n\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NewsApiService } from '../news-api.service';\n\n@Component({\n  selector: 'app-news-feed',\n  templateUrl: './news-feed.component.html',\n  styleUrls: ['./news-feed.component.css']\n})\nexport class NewsFeedComponent implements OnInit {\n\n  mArticles:Array<any>;\n  mSources:Array<any>;\n\n  constructor(private newsapi:NewsApiService) {\n    console.log('news-feed component constructor called')\n   }\n\n  ngOnInit(): void {\n    //load articles\n    this.newsapi.initArticles().subscribe(data => this.mArticles = data['articles']);\n    //load news sources\n    this.newsapi.initSources().subscribe(data => this.mSources = data['sources']);\n  }\n\n  searchArticles(source){\n    console.log('selected source is: ' + source);\n    this.newsapi.getArticlesByID(source).subscribe(data => this.mArticles = data['articles']);\n  }\n\n}\n","<mat-toolbar color=\"accent\">\n    <span>Top Corona Nieuws</span>\n    <span class=\"fill_remaining_space\"></span>\n    <span class=\"poweredby\">Powered by NewsAPI.org</span>    \n</mat-toolbar>\n\n<div class=\"newscards\">    \n    <mat-card class=\"example-card\" *ngFor=\"let article of mArticles\">\n        <mat-card-header>\n            <div mat-card-avatar [ngStyle]=\"{'background-image': 'url(../assets/images/' + article.source.name + '.png)'}\" class=\"header-image\"></div>\n            <mat-card-title class=\"title\">{{article.title}}</mat-card-title>\n            <mat-card-subtitle>{{article.source.name}}</mat-card-subtitle>            \n        </mat-card-header>\n        <img mat-card-image class=\"img-article\" src={{article.urlToImage}} alt=\"\">\n        <mat-card-content>\n            <p>\n                {{article.description}}\n            </p>\n        </mat-card-content>\n        <mat-card-actions class=\"action-buttos\">\n            <a mat-button color=\"primary\" href={{article.url}} target=\"_blank\"><mat-icon>open_in_new</mat-icon> Lees verder</a>\n        </mat-card-actions>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>404: PAGE NOT FOUND</h1>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-regels',\n  templateUrl: './regels.component.html',\n  styleUrls: ['./regels.component.css']\n})\nexport class RegelsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n    <div id = \"Overzicht van de regels\" class=\"rulespage\">\n        <h3>Dit zijn de regels omtrent het Coronavirus: </h3>\n            <ul>\n                <li>Voor iedereen geldt: blijf en werk zoveel mogelijk thuis.</li>\n                <li>Bij koorts moet het volledige huishouden thuisblijven.</li>\n                <li>Er mogen niet meer dan drie mensen op bezoek komen.</li>\n                <li>Schud geen handen.</li>\n                <li>Verpleeghuizen in de ouderenzorg zijn gesloten voor bezoekers. </li>\n            </ul>\n        \n        <div class=\"img-wrapper\">\n            <img src=\"https://www.rijksoverheid.nl/binaries/large/content/gallery/rijksoverheid/content-afbeeldingen/onderwerpen/coronavirus/posters-jpg/200506-nkc-maatregelen-rgb-a4-page-001.jpg\" alt=\"Diagram corona maatregelen\">\n        </div>\n    </div>\n</body>\n\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-register-dialog',\n  templateUrl: './register-dialog.component.html',\n  styleUrls: ['./register-dialog.component.css']\n})\nexport class RegisterDialogComponent implements OnInit {\n\n  constructor(public dialogRef : MatDialogRef<RegisterDialogComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<app-register-form [dialog]=this></app-register-form>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { RegistrationService } from '../registration.service';\r\nimport { Registration } from '../registration'\r\nimport { RegisterDialogComponent } from '../register-dialog/register-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-register-form',\r\n  templateUrl: './register-form.component.html',\r\n  styleUrls: ['./register-form.component.css'],\r\n  providers: [RegistrationService]\r\n})\r\nexport class RegisterFormComponent implements OnInit {\r\n\r\n  @Input()\r\n  dialog: RegisterDialogComponent\r\n\r\n  registration = new Registration()\r\n\r\n\r\n  constructor (public registrationService: RegistrationService) { }\r\n  \r\n  save() {\r\n    this.registrationService.save(this.registration).subscribe(\r\n    () => this.dialog.close()\r\n    );\r\n    \r\n\r\n  }\r\n\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Registreer</h2>\n\n<mat-dialog-content>\n\n    <mat-form-field appearance=\"legacy\">\n        <mat-label>Gebruikersnaam</mat-label>\n        <input matInput required min=\"5\" max=\"20\" type=\"text\" id=\"username\" [(ngModel)]=\"registration.username\" name=\"username\">\n        <mat-hint>5-20 characters</mat-hint>\n    </mat-form-field>\n      <br>\n        <mat-form-field appearance=\"legacy\">\n        <mat-label>Wachtwoord</mat-label>\n        <input matInput required min=\"5\" max=\"20\" type=\"password\" id=\"password\" [(ngModel)]=\"registration.password\" name=\"password\">\n        <mat-hint>5-20 characters</mat-hint>\n    </mat-form-field>\n    <br>\n    <mat-form-field appearance=\"legacy\">\n        <mat-label>Voornaam</mat-label>\n        <input matInput required type=\"text\" id=\"firstName\" [(ngModel)]=\"registration.firstName\" name=\"firstName\">\n    </mat-form-field>\n    <br>\n    <mat-form-field appearance=\"legacy\">\n        <mat-label>Achternaam</mat-label>\n        <input matInput required type=\"text\" id=\"lastName\" [(ngModel)]=\"registration.lastName\" name=\"lastName\">\n    </mat-form-field>\n    <br>\n    <mat-form-field appearance=\"legacy\">\n        <mat-label>Geboortedatum</mat-label>\n        <input matInput required type=\"date\" id=\"dateOfBirth\" [(ngModel)]=\"registration.dateOfBirth\" name=\"dateOfBirth\">\n    </mat-form-field>\n    <br>\n    <mat-form-field appearance=\"legacy\">\n        <mat-label>Geslacht</mat-label>\n        <mat-select matNativeControl required id=\"gender\" [(ngModel)]=\"registration.gender\" name=\"gender\">\n            <mat-option value=\"man\">Man</mat-option>\n            <mat-option value=\"vrouw\">Vrouw</mat-option>\n            <mat-option value=\"overig\">Overig</mat-option>\n          </mat-select>\n    </mat-form-field>\n    <br>\n    <mat-form-field appearance=\"legacy\">\n        <mat-label>Woonplaats</mat-label>\n        <input matInput required type=\"text\" id=\"city\" [(ngModel)]=\"registration.city\" name=\"city\">\n    </mat-form-field>\n\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button class=\"mat-raised-button\" (click)=\"save()\">Stuur Registratie</button>\n</mat-dialog-actions>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Registration } from \"./registration\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrationService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  save(registration: Registration) {\r\n    return this.http.post<any>('/registration', registration)\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","export class Registration {\n\n  \n    userId: number;\n    username: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    dateOfBirth: string;\n    gender: string;\n    city: string;\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst baseUrl = 'http://localhost:8080/api/products';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id, data) {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n\n  findByTitle(title) {\n    return this.http.get(`${baseUrl}?title=${title}`);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/services/product.service'\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n  product = {\n    title: '',\n    description: '',\n    price: '',\n    items: ''\n  };\n  submitted = false;\n\n  constructor(private productService: ProductService) { }\n\n  ngOnInit() {\n  }\n\n  saveProduct() {\n    const data = {\n      title: this.product.title,\n      description: this.product.description,\n      price: this.product.price,\n      items: this.product.items\n    };\n\n    this.productService.create(data)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  newProduct() {\n    this.submitted = false;\n    this.product = {\n      title: '',\n      description: '',\n      price: '',\n      items: ''\n    };\n  }\n}","<div class=\"add-products\">\n    <div *ngIf=\"!submitted\">\n      <div class=\"form-group\">\n        <label for=\"title\">Product</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"title\"\n          required\n          [(ngModel)]=\"product.title\"\n          name=\"title\"\n        />\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"description\">Product description</label>\n        <input\n          class=\"form-control\"\n          id=\"description\"\n          required\n          [(ngModel)]=\"product.description\"\n          name=\"description\"\n        />\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"price\">Price</label>\n        <input\n          class=\"form-control\"\n          id=\"price\"\n          required\n          [(ngModel)]=\"product.price\"\n          name=\"price\"\n        />\n      </div>\n\n      <button (click)=\"saveProduct()\" class=\"btn btn-success\">Submit</button>\n    </div>\n  \n    <div *ngIf=\"submitted\">\n      <h4>You submitted successfully!</h4>\n      <button class=\"btn btn-success\" (click)=\"newProduct()\">Add</button>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/services/product.service';\nimport { ActivatedRoute, Router } from '@angular/router'\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n  currentProduct = null;\n  message = '';\n\n  constructor(\n    private productService: ProductService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.message = '';\n    this.getProduct(this.route.snapshot.paramMap.get('id'));\n  }\n\n  getProduct(id) {\n    this.productService.get(id)\n      .subscribe(\n        data => {\n          this.currentProduct = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n\n\n  updatePublished(status) {\n    const data = {\n      title: this.currentProduct.title,\n      description: this.currentProduct.description,\n    };\n\n    this.productService.update(this.currentProduct.id, data)\n      .subscribe(\n        response => {\n          console.log(response);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateProduct() {\n    this.productService.update(this.currentProduct.id, this.currentProduct)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.message = 'The product was updated successfully!';\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  deleteProduct() {\n    this.productService.delete(this.currentProduct.id)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.router.navigate(['/products']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}","<div *ngIf=\"currentProduct\" class=\"edit-form\">\n    <h4>Product</h4>\n    <form>\n      <div class=\"form-group\">\n        <label for=\"title\">Product</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"title\"\n          [(ngModel)]=\"currentProduct.title\"\n          name=\"title\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Product description</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"description\"\n          [(ngModel)]=\"currentProduct.description\"\n          name=\"description\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"price\">Price</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"price\"\n          [(ngModel)]=\"currentProduct.price\"\n          name=\"price\"\n        />\n      </div> \n\n      <div class=\"form-group\">\n        <label for=\"items\">How many products do you want to buy?</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"items\"\n          [(ngModel)]=\"currentProduct.items\"\n          name=\"items\"\n        />\n      </div> \n    </form>\n    <button class=\"badge badge-danger mr-2\" (click)=\"deleteProduct()\">\n      Delete\n    </button>\n  \n    <button type=\"submit\" class=\"badge badge-success\" (click)=\"updateProduct()\">\n      Update\n    </button>\n    \n    <p>{{ message }}</p>\n  </div>\n  \n  <div *ngIf=\"!currentProduct\">\n    <br />\n    <p>Cannot access this Product...</p>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  products: any;\n  currentProduct = null;\n  currentIndex = -1;\n  title = '';\n\n  constructor(private productService: ProductService) { }\n\n  ngOnInit() {\n    this.retrieveProducts();\n  }\n\n  retrieveProducts() {\n    this.productService.getAll()\n      .subscribe(\n        data => {\n          this.products = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  refreshList() {\n    this.retrieveProducts();\n    this.currentProduct = null;\n    this.currentIndex = -1;\n  }\n\n  setActiveProduct(product, index) {\n    this.currentProduct = product;\n    this.currentIndex = index;\n  }\n\n  removeAllProducts() {\n    this.productService.deleteAll()\n      .subscribe(\n        response => {\n          console.log(response);\n          this.retrieveProducts();\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  searchTitle() {\n    this.productService.findByTitle(this.title)\n      .subscribe(\n        data => {\n          this.products = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}","<div class=\"product-list\">\n    <div class=\"col-md-8\">\n      <div class=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          class=\"form-control\" \n          placeholder=\"Search product\"\n          [(ngModel)]=\"title\"\n        />\n        <div class=\"input-group-append\">\n          <button\n            class=\"btn btn-outline-secondary\"\n            type=\"button\"\n            (click)=\"searchTitle()\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <h2>Product list</h2>\n\n      <div fxLayout='row' fxLayoutWrap class=\"cards\">\n        <div fxFlex=\"20\" class=\"example-card\" \n        *ngFor=\"let product of products; let i = index\" \n        [class.active]=\"i == currentIndex\"\n        (click)=\"setActiveProduct(product, i)\">\n          <mat-card>\n            <mat-card-header>\n              <mat-card-title>{{product.title}}</mat-card-title>\n              <mat-card-subtitle>{{product.description}}</mat-card-subtitle>\n            </mat-card-header>\n            <img mat-card-image src=\"https://www.stofzuigerzakken-online.nl/contents/media/l_mondkapje-3-laags.jpg\" alt=\"Photo of a Shiba Inu\">\n            <mat-card-content>\n              <p style=\"color:black\"><s>\n                € {{product.price*1.15}}</s> (15% off)\n              </p>\n              <p style=\"color:red\">\n                € {{product.price}}\n              </p>\n            </mat-card-content>\n            <mat-card-actions>\n              <button><a href=\"/products/{{ currentProduct.id }}\">Details</a></button>\n            </mat-card-actions>\n          </mat-card>\n        </div>\n      </div>\n  \n      <button class=\"m-3 btn btn-sm btn-danger\" (click)=\"removeAllProducts()\">\n        Remove All Products\n      </button>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit {\n\n  products: any;\n  currentProduct = null;\n  currentIndex = -1;\n  title = '';\n\n  constructor(private productService: ProductService) { }\n\n  ngOnInit() {\n    this.retrieveProducts();\n  }\n\n  retrieveProducts() {\n    this.productService.getAll()\n      .subscribe(\n        data => {\n          this.products = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  refreshList() {\n    this.retrieveProducts();\n    this.currentProduct = null;\n    this.currentIndex = -1;\n  }\n\n  setActiveProduct(product, index) {\n    this.currentProduct = product;\n    this.currentIndex = index;\n  }\n\n  removeAllProducts() {\n    this.productService.deleteAll()\n      .subscribe(\n        response => {\n          console.log(response);\n          this.retrieveProducts();\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  searchTitle() {\n    this.productService.findByTitle(this.title)\n      .subscribe(\n        data => {\n          this.products = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}","<div class=\"shop-cart\">\n\n    <h2>Shopping Cart </h2>\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Product</th>\n            <th scope=\"col\">Items</th>\n            <th scope=\"col\">Subtotal</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let product of products; let i = index\">\n            <td scope=\"row\">{{product.title}}</td>\n            <td>{{product.items}}</td>\n            <td>€ {{product.price * product.items}}</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </table>\n    \n      <div class=\"example-button-row\">\n        <button><a mat-raised-button color=\"primary\" href=\"https://ing.com/\">PAY</a></button>\n      </div>\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.css']\n})\nexport class ShopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"totalPage\">\n    <mat-toolbar class=\"toolbar\" color=\"accent\">\n      <span class=\"app_title\">Corona Webshop</span>\n      <span class=\"toolbar_fill_remaining_space\"></span>\n    </mat-toolbar>\n  \n    <mat-sidenav-container class=\"sidenav-container\">\n      <mat-sidenav class=\"sidenav\" position=\"start\" mode=\"side\" opened>\n        <mat-list>\n          <mat-list-item><span class=\"navspacer\"></span><a mat-raised-button class=\"navbut\" routerLink=\"./products\">Product list</a></mat-list-item>\n          <mat-list-item><span class=\"navspacer\"></span><a mat-raised-button class=\"navbut\" color=\"primary\" routerLink=\"./add\">Add products</a></mat-list-item>\n          <mat-list-item><span class=\"navspacer\"></span><a mat-raised-button class=\"navbut\" color=\"primary\" routerLink=\"./cart\">Shopping cart</a></mat-list-item>\n        </mat-list>\n      </mat-sidenav>\n      <mat-sidenav-content>\n        <router-outlet></router-outlet>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-via-service',\n  templateUrl: './via-service.component.html',\n  styleUrls: ['./via-service.component.css']\n})\nexport class ViaServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>via-service works!</p>\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViaService {\n\n  constructor() { }\n\n  private subject = new Subject<any>();\n\n  sendMessage(message: string) {\n    this.subject.next({text: message});\n  }\n\n  clearMessage() {\n    this.subject.next();\n  }\n\n  getMessage() {\n    return this.subject.asObservable();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}